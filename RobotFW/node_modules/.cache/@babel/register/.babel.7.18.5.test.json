{"{\"assumptions\":{},\"sourceRoot\":\"/Users/User/Desktop/cucumber-wdio-js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/User/Desktop/cucumber-wdio-js\",\"filename\":\"/Users/User/Desktop/cucumber-wdio-js/wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/User/Desktop/cucumber-wdio-js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.18.5:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  runner: 'local',\n  path: 'wd/hub',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // from which `wdio` was called.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./features/login.feature'],\n  // Patterns to exclude.\n  exclude: [// 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // maxInstances can get overwritten per capability. So if you have an in-house Selenium\n    // grid with only 5 firefox instances available you can make sure that not more than\n    // 5 instances get started at a time.\n    maxInstances: 5,\n    //\n    browserName: 'chrome',\n    acceptInsecureCerts: true // If outputDir is provided WebdriverIO can capture driver session logs\n    // it is possible to configure which logTypes to include/exclude.\n    // excludeDriverLogs: ['*'], // pass '*' to exclude all driver session logs\n    // excludeDriverLogs: ['bugreport', 'server'],\n\n  }],\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'https://www.saucedemo.com/',\n  waitforTimeout: 10000,\n  connectionRetryTimeout: 120000,\n  connectionRetryCount: 3,\n  services: ['chromedriver'],\n  framework: 'cucumber',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  reporters: [['allure', {\n    outputDir: 'allure-results',\n    disableWebdriverStepsReporting: true,\n    disableWebdriverScreenshotsReporting: true\n  }]],\n  //\n  // If you are using Cucumber you need to specify the location of your step definitions.\n  cucumberOpts: {\n    // <string[]> (file/dir) require files before executing features\n    requireModule: ['@babel/register'],\n    require: ['./step-definitions/Loginstepdef.js'],\n    // <boolean> show full backtrace for errors\n    backtrace: false,\n    // <string[]> (\"extension:module\") require files with the given EXTENSION after requiring MODULE (repeatable)\n    requireModule: [],\n    // <boolean> invoke formatters without executing steps\n    dryRun: false,\n    // <boolean> abort the run on first failure\n    failFast: false,\n    // <boolean> hide step definition snippets for pending steps\n    snippets: true,\n    // <boolean> hide source uris\n    source: true,\n    // <boolean> fail if there are any undefined or pending steps\n    strict: false,\n    // <string> (expression) only execute the features or scenarios with tags matching the expression\n    tagExpression: '',\n    // <number> timeout for step definitions\n    timeout: 60000,\n    // <boolean> Enable this config to treat undefined definitions as warnings.\n    ignoreUndefinedDefinitions: false\n  },\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {String} cid      capability id (e.g 0-0)\n   * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {[type]} specs    specs to be run in the worker process\n   * @param  {[type]} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {[type]} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {String} cid      capability id (e.g 0-0)\n   * @param  {Number} exitCode 0 - success, 1 - fail\n   * @param  {[type]} specs    specs to be run in the worker process\n   * @param  {Number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {String} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {Object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n\n  /**\n   * Cucumber Hooks\n   *\n   * Runs before a Cucumber Feature.\n   * @param {String}                   uri      path to feature file\n   * @param {GherkinDocument.IFeature} feature  Cucumber feature object\n   */\n  // beforeFeature: function (uri, feature) {\n  // },\n\n  /**\n   *\n   * Runs before a Cucumber Scenario.\n   * @param {ITestCaseHookParameter} world    world object containing information on pickle and test step\n   * @param {Object}                 context  Cucumber World object\n   */\n  // beforeScenario: function (world, context) {\n  // },\n\n  /**\n   *\n   * Runs before a Cucumber Step.\n   * @param {Pickle.IPickleStep} step     step data\n   * @param {IPickle}            scenario scenario pickle\n   * @param {Object}             context  Cucumber World object\n   */\n  // beforeStep: function (step, scenario, context) {\n  // },\n\n  /**\n   *\n   * Runs after a Cucumber Step.\n   * @param {Pickle.IPickleStep} step             step data\n   * @param {IPickle}            scenario         scenario pickle\n   * @param {Object}             result           results object containing scenario results\n   * @param {boolean}            result.passed    true if scenario has passed\n   * @param {string}             result.error     error stack if scenario failed\n   * @param {number}             result.duration  duration of scenario in milliseconds\n   * @param {Object}             context          Cucumber World object\n   */\n  afterStep: async function (step, scenario, {\n    error,\n    duration,\n    passed\n  }, context) {\n    if (error) {\n      await browser.saveScreenshot('./screenshots/_' + '.png');\n    }\n  }\n  /**\n   *\n   * Runs after a Cucumber Scenario.\n   * @param {ITestCaseHookParameter} world            world object containing information on pickle and test step\n   * @param {Object}                 result           results object containing scenario results\n   * @param {boolean}                result.passed    true if scenario has passed\n   * @param {string}                 result.error     error stack if scenario failed\n   * @param {number}                 result.duration  duration of scenario in milliseconds\n   * @param {Object}                 context          Cucumber World object\n   */\n  // afterScenario: function (world, result, context) {\n  // },\n\n  /**\n   *\n   * Runs after a Cucumber Feature.\n   * @param {String}                   uri      path to feature file\n   * @param {GherkinDocument.IFeature} feature  Cucumber feature object\n   */\n  // afterFeature: function (uri, feature) {\n  // },\n\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {Number} result 0 - command success, 1 - command error\n   * @param {Object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {Number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {Object} exitCode 0 - success, 1 - fail\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n\n  /**\n  * Gets executed when a refresh happens.\n  * @param {String} oldSessionId session ID of the old session\n  * @param {String} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","path","specs","exclude","maxInstances","capabilities","browserName","acceptInsecureCerts","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","services","framework","reporters","outputDir","disableWebdriverStepsReporting","disableWebdriverScreenshotsReporting","cucumberOpts","requireModule","require","backtrace","dryRun","failFast","snippets","source","strict","tagExpression","timeout","ignoreUndefinedDefinitions","afterStep","step","scenario","error","duration","passed","context","browser","saveScreenshot"],"sourceRoot":"/Users/User/Desktop/cucumber-wdio-js/","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    runner: 'local',\n    path: 'wd/hub',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // from which `wdio` was called.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './features/login.feature'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n    \n        // maxInstances can get overwritten per capability. So if you have an in-house Selenium\n        // grid with only 5 firefox instances available you can make sure that not more than\n        // 5 instances get started at a time.\n        maxInstances: 5,\n        //\n        browserName: 'chrome',\n        acceptInsecureCerts: true\n        // If outputDir is provided WebdriverIO can capture driver session logs\n        // it is possible to configure which logTypes to include/exclude.\n        // excludeDriverLogs: ['*'], // pass '*' to exclude all driver session logs\n        // excludeDriverLogs: ['bugreport', 'server'],\n    }],\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'https://www.saucedemo.com/',\n    waitforTimeout: 10000,\n    connectionRetryTimeout: 120000,\n    connectionRetryCount: 3,\n    services: ['chromedriver'],\n    framework: 'cucumber',\n\n\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n    reporters: [['allure', {\n        outputDir: 'allure-results',\n        disableWebdriverStepsReporting: true,\n        disableWebdriverScreenshotsReporting: true,\n    }]],\n\n\n    //\n    // If you are using Cucumber you need to specify the location of your step definitions.\n    cucumberOpts: {\n        // <string[]> (file/dir) require files before executing features\n        requireModule: ['@babel/register'],\n        require: ['./step-definitions/Loginstepdef.js'],\n        // <boolean> show full backtrace for errors\n        backtrace: false,\n        // <string[]> (\"extension:module\") require files with the given EXTENSION after requiring MODULE (repeatable)\n        requireModule: [],\n        // <boolean> invoke formatters without executing steps\n        dryRun: false,\n        // <boolean> abort the run on first failure\n        failFast: false,\n        // <boolean> hide step definition snippets for pending steps\n        snippets: true,\n        // <boolean> hide source uris\n        source: true,\n        // <boolean> fail if there are any undefined or pending steps\n        strict: false,\n        // <string> (expression) only execute the features or scenarios with tags matching the expression\n        tagExpression: '',\n        // <number> timeout for step definitions\n        timeout: 60000,\n        // <boolean> Enable this config to treat undefined definitions as warnings.\n        ignoreUndefinedDefinitions: false\n    },\n    \n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {String} cid      capability id (e.g 0-0)\n     * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {[type]} specs    specs to be run in the worker process\n     * @param  {[type]} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {[type]} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {String} cid      capability id (e.g 0-0)\n     * @param  {Number} exitCode 0 - success, 1 - fail\n     * @param  {[type]} specs    specs to be run in the worker process\n     * @param  {Number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {String} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {Object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Cucumber Hooks\n     *\n     * Runs before a Cucumber Feature.\n     * @param {String}                   uri      path to feature file\n     * @param {GherkinDocument.IFeature} feature  Cucumber feature object\n     */\n    // beforeFeature: function (uri, feature) {\n    // },\n    /**\n     *\n     * Runs before a Cucumber Scenario.\n     * @param {ITestCaseHookParameter} world    world object containing information on pickle and test step\n     * @param {Object}                 context  Cucumber World object\n     */\n    // beforeScenario: function (world, context) {\n    // },\n    /**\n     *\n     * Runs before a Cucumber Step.\n     * @param {Pickle.IPickleStep} step     step data\n     * @param {IPickle}            scenario scenario pickle\n     * @param {Object}             context  Cucumber World object\n     */\n    // beforeStep: function (step, scenario, context) {\n    // },\n    /**\n     *\n     * Runs after a Cucumber Step.\n     * @param {Pickle.IPickleStep} step             step data\n     * @param {IPickle}            scenario         scenario pickle\n     * @param {Object}             result           results object containing scenario results\n     * @param {boolean}            result.passed    true if scenario has passed\n     * @param {string}             result.error     error stack if scenario failed\n     * @param {number}             result.duration  duration of scenario in milliseconds\n     * @param {Object}             context          Cucumber World object\n     */\n    afterStep: async function (step, scenario, { error, duration, passed }, context) {\n        if (error) {\n          await browser.saveScreenshot('./screenshots/_' + '.png');\n        }\n      },\n    /**\n     *\n     * Runs after a Cucumber Scenario.\n     * @param {ITestCaseHookParameter} world            world object containing information on pickle and test step\n     * @param {Object}                 result           results object containing scenario results\n     * @param {boolean}                result.passed    true if scenario has passed\n     * @param {string}                 result.error     error stack if scenario failed\n     * @param {number}                 result.duration  duration of scenario in milliseconds\n     * @param {Object}                 context          Cucumber World object\n     */\n    // afterScenario: function (world, result, context) {\n    // },\n    /**\n     *\n     * Runs after a Cucumber Feature.\n     * @param {String}                   uri      path to feature file\n     * @param {GherkinDocument.IFeature} feature  Cucumber feature object\n     */\n    // afterFeature: function (uri, feature) {\n    // },\n    \n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {Number} result 0 - command success, 1 - command error\n     * @param {Object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {Number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {Object} exitCode 0 - success, 1 - fail\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {String} oldSessionId session ID of the old session\n    * @param {String} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAR,GAAiB;EACb;EACA;EACA;EACA;EACAC,MAAM,EAAE,OALK;EAMbC,IAAI,EAAE,QANO;EAOb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,0BADG,CAvBM;EA0Bb;EACAC,OAAO,EAAE,CACL;EADK,CA3BI;EA8Bb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EA9CD;EA+Cb;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IAEX;IACA;IACA;IACAD,YAAY,EAAE,CALH;IAMX;IACAE,WAAW,EAAE,QAPF;IAQXC,mBAAmB,EAAE,IARV,CASX;IACA;IACA;IACA;;EAZW,CAAD,CApDD;EAkEb;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAzEG;EA0Eb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CA3FO;EA4Fb;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,4BAjGI;EAkGbC,cAAc,EAAE,KAlGH;EAmGbC,sBAAsB,EAAE,MAnGX;EAoGbC,oBAAoB,EAAE,CApGT;EAqGbC,QAAQ,EAAE,CAAC,cAAD,CArGG;EAsGbC,SAAS,EAAE,UAtGE;EAyGb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAD,CAtHE;EAuHbA,SAAS,EAAE,CAAC,CAAC,QAAD,EAAW;IACnBC,SAAS,EAAE,gBADQ;IAEnBC,8BAA8B,EAAE,IAFb;IAGnBC,oCAAoC,EAAE;EAHnB,CAAX,CAAD,CAvHE;EA8Hb;EACA;EACAC,YAAY,EAAE;IACV;IACAC,aAAa,EAAE,CAAC,iBAAD,CAFL;IAGVC,OAAO,EAAE,CAAC,oCAAD,CAHC;IAIV;IACAC,SAAS,EAAE,KALD;IAMV;IACAF,aAAa,EAAE,EAPL;IAQV;IACAG,MAAM,EAAE,KATE;IAUV;IACAC,QAAQ,EAAE,KAXA;IAYV;IACAC,QAAQ,EAAE,IAbA;IAcV;IACAC,MAAM,EAAE,IAfE;IAgBV;IACAC,MAAM,EAAE,KAjBE;IAkBV;IACAC,aAAa,EAAE,EAnBL;IAoBV;IACAC,OAAO,EAAE,KArBC;IAsBV;IACAC,0BAA0B,EAAE;EAvBlB,CAhID;EA0Jb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,SAAS,EAAE,gBAAgBC,IAAhB,EAAsBC,QAAtB,EAAgC;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,CAAhC,EAA6DC,OAA7D,EAAsE;IAC7E,IAAIH,KAAJ,EAAW;MACT,MAAMI,OAAO,CAACC,cAAR,CAAuB,oBAAoB,MAA3C,CAAN;IACD;EACF;EACH;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;AAhUa,CAAjB"}},"mtime":1659354886311},"{\"assumptions\":{},\"sourceRoot\":\"/Users/User/Desktop/cucumber-wdio-js/step-definitions/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/User/Desktop/cucumber-wdio-js\",\"filename\":\"/Users/User/Desktop/cucumber-wdio-js/step-definitions/Loginstepdef.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/User/Desktop/cucumber-wdio-js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.18.5:test":{"value":{"code":"const {\n  Given,\n  When,\n  Then\n} = require('@wdio/cucumber-framework');\n\nconst assert = require('assert');\n\nconst {\n  title\n} = require('process');\n\nGiven(/^I am on the login page$/, async () => {\n  await browser.url(\"https://www.saucedemo.com/\");\n  console.log(\"My URL is: \" + browser.getUrl());\n});\nWhen(/^I login with a default user$/, async () => {\n  await browser.$(\"#user-name\").setValue(\"standard_user\");\n  await browser.$(\"#password\").setValue(\"secret_sauce\");\n  await browser.$(\"#login-butto\").click(); // const title = await browser.$(\".title\")\n  // assert.equal(title, PRODUCTS, [Message])\n});\nThen(/^I shall be on the Flight Finder page$/, async () => {\n  var strUrl = browser.getUrl();\n  console.log(\"URL is:\" + strUrl);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHaXZlbiIsIldoZW4iLCJUaGVuIiwicmVxdWlyZSIsImFzc2VydCIsInRpdGxlIiwiYnJvd3NlciIsInVybCIsImNvbnNvbGUiLCJsb2ciLCJnZXRVcmwiLCIkIiwic2V0VmFsdWUiLCJjbGljayIsInN0clVybCJdLCJzb3VyY2VSb290IjoiL1VzZXJzL1VzZXIvRGVza3RvcC9jdWN1bWJlci13ZGlvLWpzL3N0ZXAtZGVmaW5pdGlvbnMvIiwic291cmNlcyI6WyJMb2dpbnN0ZXBkZWYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBHaXZlbiwgV2hlbiwgVGhlbiB9ID0gcmVxdWlyZSgnQHdkaW8vY3VjdW1iZXItZnJhbWV3b3JrJyk7XG5jb25zdCBhc3NlcnQgPSByZXF1aXJlKCdhc3NlcnQnKTtcbmNvbnN0IHsgdGl0bGUgfSA9IHJlcXVpcmUoJ3Byb2Nlc3MnKTtcblxuR2l2ZW4oL15JIGFtIG9uIHRoZSBsb2dpbiBwYWdlJC8sIGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCBicm93c2VyLnVybChcImh0dHBzOi8vd3d3LnNhdWNlZGVtby5jb20vXCIpXG4gICAgY29uc29sZS5sb2coXCJNeSBVUkwgaXM6IFwiKyBicm93c2VyLmdldFVybCgpKTtcblxuXG59KTtcblxuV2hlbigvXkkgbG9naW4gd2l0aCBhIGRlZmF1bHQgdXNlciQvLCBhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgYnJvd3Nlci4kKFwiI3VzZXItbmFtZVwiKS5zZXRWYWx1ZShcInN0YW5kYXJkX3VzZXJcIik7XG4gICAgYXdhaXQgYnJvd3Nlci4kKFwiI3Bhc3N3b3JkXCIpLnNldFZhbHVlKFwic2VjcmV0X3NhdWNlXCIpO1xuICAgIGF3YWl0IGJyb3dzZXIuJChcIiNsb2dpbi1idXR0b1wiKS5jbGljaygpO1xuICAgIC8vIGNvbnN0IHRpdGxlID0gYXdhaXQgYnJvd3Nlci4kKFwiLnRpdGxlXCIpXG4gICAgLy8gYXNzZXJ0LmVxdWFsKHRpdGxlLCBQUk9EVUNUUywgW01lc3NhZ2VdKVxuICAgXG5cbn0pO1xuXG5UaGVuKC9eSSBzaGFsbCBiZSBvbiB0aGUgRmxpZ2h0IEZpbmRlciBwYWdlJC8sIGFzeW5jICgpID0+IHtcbiAgICB2YXIgc3RyVXJsID0gYnJvd3Nlci5nZXRVcmwoKTtcblxuICAgIGNvbnNvbGUubG9nKFwiVVJMIGlzOlwiICsgc3RyVXJsKVxufSk7Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0VBQUVBLEtBQUY7RUFBU0MsSUFBVDtFQUFlQztBQUFmLElBQXdCQyxPQUFPLENBQUMsMEJBQUQsQ0FBckM7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNO0VBQUVFO0FBQUYsSUFBWUYsT0FBTyxDQUFDLFNBQUQsQ0FBekI7O0FBRUFILEtBQUssQ0FBQywwQkFBRCxFQUE2QixZQUFZO0VBQzFDLE1BQU1NLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDRCQUFaLENBQU47RUFDQUMsT0FBTyxDQUFDQyxHQUFSLENBQVksZ0JBQWVILE9BQU8sQ0FBQ0ksTUFBUixFQUEzQjtBQUdILENBTEksQ0FBTDtBQU9BVCxJQUFJLENBQUMsK0JBQUQsRUFBa0MsWUFBWTtFQUM5QyxNQUFNSyxPQUFPLENBQUNLLENBQVIsQ0FBVSxZQUFWLEVBQXdCQyxRQUF4QixDQUFpQyxlQUFqQyxDQUFOO0VBQ0EsTUFBTU4sT0FBTyxDQUFDSyxDQUFSLENBQVUsV0FBVixFQUF1QkMsUUFBdkIsQ0FBZ0MsY0FBaEMsQ0FBTjtFQUNBLE1BQU1OLE9BQU8sQ0FBQ0ssQ0FBUixDQUFVLGNBQVYsRUFBMEJFLEtBQTFCLEVBQU4sQ0FIOEMsQ0FJOUM7RUFDQTtBQUdILENBUkcsQ0FBSjtBQVVBWCxJQUFJLENBQUMsd0NBQUQsRUFBMkMsWUFBWTtFQUN2RCxJQUFJWSxNQUFNLEdBQUdSLE9BQU8sQ0FBQ0ksTUFBUixFQUFiO0VBRUFGLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVlLLE1BQXhCO0FBQ0gsQ0FKRyxDQUFKIn0=","map":{"version":3,"names":["Given","When","Then","require","assert","title","browser","url","console","log","getUrl","$","setValue","click","strUrl"],"sourceRoot":"/Users/User/Desktop/cucumber-wdio-js/step-definitions/","sources":["Loginstepdef.js"],"sourcesContent":["const { Given, When, Then } = require('@wdio/cucumber-framework');\nconst assert = require('assert');\nconst { title } = require('process');\n\nGiven(/^I am on the login page$/, async () => {\n    await browser.url(\"https://www.saucedemo.com/\")\n    console.log(\"My URL is: \"+ browser.getUrl());\n\n\n});\n\nWhen(/^I login with a default user$/, async () => {\n    await browser.$(\"#user-name\").setValue(\"standard_user\");\n    await browser.$(\"#password\").setValue(\"secret_sauce\");\n    await browser.$(\"#login-butto\").click();\n    // const title = await browser.$(\".title\")\n    // assert.equal(title, PRODUCTS, [Message])\n   \n\n});\n\nThen(/^I shall be on the Flight Finder page$/, async () => {\n    var strUrl = browser.getUrl();\n\n    console.log(\"URL is:\" + strUrl)\n});"],"mappings":"AAAA,MAAM;EAAEA,KAAF;EAASC,IAAT;EAAeC;AAAf,IAAwBC,OAAO,CAAC,0BAAD,CAArC;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAM;EAAEE;AAAF,IAAYF,OAAO,CAAC,SAAD,CAAzB;;AAEAH,KAAK,CAAC,0BAAD,EAA6B,YAAY;EAC1C,MAAMM,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAAN;EACAC,OAAO,CAACC,GAAR,CAAY,gBAAeH,OAAO,CAACI,MAAR,EAA3B;AAGH,CALI,CAAL;AAOAT,IAAI,CAAC,+BAAD,EAAkC,YAAY;EAC9C,MAAMK,OAAO,CAACK,CAAR,CAAU,YAAV,EAAwBC,QAAxB,CAAiC,eAAjC,CAAN;EACA,MAAMN,OAAO,CAACK,CAAR,CAAU,WAAV,EAAuBC,QAAvB,CAAgC,cAAhC,CAAN;EACA,MAAMN,OAAO,CAACK,CAAR,CAAU,cAAV,EAA0BE,KAA1B,EAAN,CAH8C,CAI9C;EACA;AAGH,CARG,CAAJ;AAUAX,IAAI,CAAC,wCAAD,EAA2C,YAAY;EACvD,IAAIY,MAAM,GAAGR,OAAO,CAACI,MAAR,EAAb;EAEAF,OAAO,CAACC,GAAR,CAAY,YAAYK,MAAxB;AACH,CAJG,CAAJ"}},"mtime":1659354822436},"{\"assumptions\":{},\"sourceRoot\":\"/Users/User/Documents/WDIO_RelatedTestcases/cucumber-wdio-js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/User/Documents/WDIO_RelatedTestcases/cucumber-wdio-js\",\"filename\":\"/Users/User/Documents/WDIO_RelatedTestcases/cucumber-wdio-js/wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/User/Documents/WDIO_RelatedTestcases/cucumber-wdio-js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.18.5:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  runner: 'local',\n  path: 'wd/hub',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // from which `wdio` was called.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./features/login.feature'],\n  // Patterns to exclude.\n  exclude: [// 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // maxInstances can get overwritten per capability. So if you have an in-house Selenium\n    // grid with only 5 firefox instances available you can make sure that not more than\n    // 5 instances get started at a time.\n    maxInstances: 5,\n    //\n    browserName: 'chrome',\n    acceptInsecureCerts: true // If outputDir is provided WebdriverIO can capture driver session logs\n    // it is possible to configure which logTypes to include/exclude.\n    // excludeDriverLogs: ['*'], // pass '*' to exclude all driver session logs\n    // excludeDriverLogs: ['bugreport', 'server'],\n\n  }],\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'https://www.saucedemo.com/',\n  waitforTimeout: 10000,\n  connectionRetryTimeout: 120000,\n  connectionRetryCount: 3,\n  services: ['chromedriver'],\n  framework: 'cucumber',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  // reporters: ['spec'],\n  reporters: [['allure', {\n    outputDir: 'allure-results',\n    disableWebdriverStepsReporting: true,\n    disableWebdriverScreenshotsReporting: true\n  }]],\n  //\n  // If you are using Cucumber you need to specify the location of your step definitions.\n  cucumberOpts: {\n    // <string[]> (file/dir) require files before executing features\n    requireModule: ['@babel/register'],\n    require: ['./step-definitions/Loginstepdef.js'],\n    // <boolean> show full backtrace for errors\n    backtrace: false,\n    // <string[]> (\"extension:module\") require files with the given EXTENSION after requiring MODULE (repeatable)\n    requireModule: [],\n    // <boolean> invoke formatters without executing steps\n    dryRun: false,\n    // <boolean> abort the run on first failure\n    failFast: false,\n    // <boolean> hide step definition snippets for pending steps\n    snippets: true,\n    // <boolean> hide source uris\n    source: true,\n    // <boolean> fail if there are any undefined or pending steps\n    strict: false,\n    // <string> (expression) only execute the features or scenarios with tags matching the expression\n    tagExpression: '',\n    // <number> timeout for step definitions\n    timeout: 60000,\n    // <boolean> Enable this config to treat undefined definitions as warnings.\n    ignoreUndefinedDefinitions: false\n  },\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {String} cid      capability id (e.g 0-0)\n   * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {[type]} specs    specs to be run in the worker process\n   * @param  {[type]} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {[type]} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {String} cid      capability id (e.g 0-0)\n   * @param  {Number} exitCode 0 - success, 1 - fail\n   * @param  {[type]} specs    specs to be run in the worker process\n   * @param  {Number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {String} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {Object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n\n  /**\n   * Cucumber Hooks\n   *\n   * Runs before a Cucumber Feature.\n   * @param {String}                   uri      path to feature file\n   * @param {GherkinDocument.IFeature} feature  Cucumber feature object\n   */\n  // beforeFeature: function (uri, feature) {\n  // },\n\n  /**\n   *\n   * Runs before a Cucumber Scenario.\n   * @param {ITestCaseHookParameter} world    world object containing information on pickle and test step\n   * @param {Object}                 context  Cucumber World object\n   */\n  // beforeScenario: function (world, context) {\n  // },\n\n  /**\n   *\n   * Runs before a Cucumber Step.\n   * @param {Pickle.IPickleStep} step     step data\n   * @param {IPickle}            scenario scenario pickle\n   * @param {Object}             context  Cucumber World object\n   */\n  // beforeStep: function (step, scenario, context) {\n  // },\n\n  /**\n   *\n   * Runs after a Cucumber Step.\n   * @param {Pickle.IPickleStep} step             step data\n   * @param {IPickle}            scenario         scenario pickle\n   * @param {Object}             result           results object containing scenario results\n   * @param {boolean}            result.passed    true if scenario has passed\n   * @param {string}             result.error     error stack if scenario failed\n   * @param {number}             result.duration  duration of scenario in milliseconds\n   * @param {Object}             context          Cucumber World object\n   */\n  afterStep: async function (step, scenario, {\n    error,\n    duration,\n    passed\n  }, context) {\n    if (error) {\n      await browser.saveScreenshot('./screenshots/_' + '.png');\n    }\n  }\n  /**\n   *\n   * Runs after a Cucumber Scenario.\n   * @param {ITestCaseHookParameter} world            world object containing information on pickle and test step\n   * @param {Object}                 result           results object containing scenario results\n   * @param {boolean}                result.passed    true if scenario has passed\n   * @param {string}                 result.error     error stack if scenario failed\n   * @param {number}                 result.duration  duration of scenario in milliseconds\n   * @param {Object}                 context          Cucumber World object\n   */\n  // afterScenario: function (world, result, context) {\n  // },\n\n  /**\n   *\n   * Runs after a Cucumber Feature.\n   * @param {String}                   uri      path to feature file\n   * @param {GherkinDocument.IFeature} feature  Cucumber feature object\n   */\n  // afterFeature: function (uri, feature) {\n  // },\n\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {Number} result 0 - command success, 1 - command error\n   * @param {Object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {Number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {Object} exitCode 0 - success, 1 - fail\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n\n  /**\n  * Gets executed when a refresh happens.\n  * @param {String} oldSessionId session ID of the old session\n  * @param {String} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","path","specs","exclude","maxInstances","capabilities","browserName","acceptInsecureCerts","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","services","framework","reporters","outputDir","disableWebdriverStepsReporting","disableWebdriverScreenshotsReporting","cucumberOpts","requireModule","require","backtrace","dryRun","failFast","snippets","source","strict","tagExpression","timeout","ignoreUndefinedDefinitions","afterStep","step","scenario","error","duration","passed","context","browser","saveScreenshot"],"sourceRoot":"/Users/User/Documents/WDIO_RelatedTestcases/cucumber-wdio-js/","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    runner: 'local',\n    path: 'wd/hub',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // from which `wdio` was called.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './features/login.feature'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n    \n        // maxInstances can get overwritten per capability. So if you have an in-house Selenium\n        // grid with only 5 firefox instances available you can make sure that not more than\n        // 5 instances get started at a time.\n        maxInstances: 5,\n        //\n        browserName: 'chrome',\n        acceptInsecureCerts: true\n        // If outputDir is provided WebdriverIO can capture driver session logs\n        // it is possible to configure which logTypes to include/exclude.\n        // excludeDriverLogs: ['*'], // pass '*' to exclude all driver session logs\n        // excludeDriverLogs: ['bugreport', 'server'],\n    }],\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'https://www.saucedemo.com/',\n    waitforTimeout: 10000,\n    connectionRetryTimeout: 120000,\n    connectionRetryCount: 3,\n    services: ['chromedriver'],\n    framework: 'cucumber',\n\n\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    // reporters: ['spec'],\n    reporters: [['allure', {\n        outputDir: 'allure-results',\n        disableWebdriverStepsReporting: true,\n        disableWebdriverScreenshotsReporting: true,\n    }]],\n\n\n    //\n    // If you are using Cucumber you need to specify the location of your step definitions.\n    cucumberOpts: {\n        // <string[]> (file/dir) require files before executing features\n        requireModule: ['@babel/register'],\n        require: ['./step-definitions/Loginstepdef.js'],\n        // <boolean> show full backtrace for errors\n        backtrace: false,\n        // <string[]> (\"extension:module\") require files with the given EXTENSION after requiring MODULE (repeatable)\n        requireModule: [],\n        // <boolean> invoke formatters without executing steps\n        dryRun: false,\n        // <boolean> abort the run on first failure\n        failFast: false,\n        // <boolean> hide step definition snippets for pending steps\n        snippets: true,\n        // <boolean> hide source uris\n        source: true,\n        // <boolean> fail if there are any undefined or pending steps\n        strict: false,\n        // <string> (expression) only execute the features or scenarios with tags matching the expression\n        tagExpression: '',\n        // <number> timeout for step definitions\n        timeout: 60000,\n        // <boolean> Enable this config to treat undefined definitions as warnings.\n        ignoreUndefinedDefinitions: false\n    },\n    \n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {String} cid      capability id (e.g 0-0)\n     * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {[type]} specs    specs to be run in the worker process\n     * @param  {[type]} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {[type]} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {String} cid      capability id (e.g 0-0)\n     * @param  {Number} exitCode 0 - success, 1 - fail\n     * @param  {[type]} specs    specs to be run in the worker process\n     * @param  {Number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {String} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {Object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Cucumber Hooks\n     *\n     * Runs before a Cucumber Feature.\n     * @param {String}                   uri      path to feature file\n     * @param {GherkinDocument.IFeature} feature  Cucumber feature object\n     */\n    // beforeFeature: function (uri, feature) {\n    // },\n    /**\n     *\n     * Runs before a Cucumber Scenario.\n     * @param {ITestCaseHookParameter} world    world object containing information on pickle and test step\n     * @param {Object}                 context  Cucumber World object\n     */\n    // beforeScenario: function (world, context) {\n    // },\n    /**\n     *\n     * Runs before a Cucumber Step.\n     * @param {Pickle.IPickleStep} step     step data\n     * @param {IPickle}            scenario scenario pickle\n     * @param {Object}             context  Cucumber World object\n     */\n    // beforeStep: function (step, scenario, context) {\n    // },\n    /**\n     *\n     * Runs after a Cucumber Step.\n     * @param {Pickle.IPickleStep} step             step data\n     * @param {IPickle}            scenario         scenario pickle\n     * @param {Object}             result           results object containing scenario results\n     * @param {boolean}            result.passed    true if scenario has passed\n     * @param {string}             result.error     error stack if scenario failed\n     * @param {number}             result.duration  duration of scenario in milliseconds\n     * @param {Object}             context          Cucumber World object\n     */\n    afterStep: async function (step, scenario, { error, duration, passed }, context) {\n        if (error) {\n          await browser.saveScreenshot('./screenshots/_' + '.png');\n        }\n      },\n    /**\n     *\n     * Runs after a Cucumber Scenario.\n     * @param {ITestCaseHookParameter} world            world object containing information on pickle and test step\n     * @param {Object}                 result           results object containing scenario results\n     * @param {boolean}                result.passed    true if scenario has passed\n     * @param {string}                 result.error     error stack if scenario failed\n     * @param {number}                 result.duration  duration of scenario in milliseconds\n     * @param {Object}                 context          Cucumber World object\n     */\n    // afterScenario: function (world, result, context) {\n    // },\n    /**\n     *\n     * Runs after a Cucumber Feature.\n     * @param {String}                   uri      path to feature file\n     * @param {GherkinDocument.IFeature} feature  Cucumber feature object\n     */\n    // afterFeature: function (uri, feature) {\n    // },\n    \n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {Number} result 0 - command success, 1 - command error\n     * @param {Object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {Number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {Object} exitCode 0 - success, 1 - fail\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {String} oldSessionId session ID of the old session\n    * @param {String} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAR,GAAiB;EACb;EACA;EACA;EACA;EACAC,MAAM,EAAE,OALK;EAMbC,IAAI,EAAE,QANO;EAOb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,0BADG,CAvBM;EA0Bb;EACAC,OAAO,EAAE,CACL;EADK,CA3BI;EA8Bb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EA9CD;EA+Cb;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IAEX;IACA;IACA;IACAD,YAAY,EAAE,CALH;IAMX;IACAE,WAAW,EAAE,QAPF;IAQXC,mBAAmB,EAAE,IARV,CASX;IACA;IACA;IACA;;EAZW,CAAD,CApDD;EAkEb;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAzEG;EA0Eb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CA3FO;EA4Fb;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,4BAjGI;EAkGbC,cAAc,EAAE,KAlGH;EAmGbC,sBAAsB,EAAE,MAnGX;EAoGbC,oBAAoB,EAAE,CApGT;EAqGbC,QAAQ,EAAE,CAAC,cAAD,CArGG;EAsGbC,SAAS,EAAE,UAtGE;EAyGb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,CAAC,QAAD,EAAW;IACnBC,SAAS,EAAE,gBADQ;IAEnBC,8BAA8B,EAAE,IAFb;IAGnBC,oCAAoC,EAAE;EAHnB,CAAX,CAAD,CAvHE;EA8Hb;EACA;EACAC,YAAY,EAAE;IACV;IACAC,aAAa,EAAE,CAAC,iBAAD,CAFL;IAGVC,OAAO,EAAE,CAAC,oCAAD,CAHC;IAIV;IACAC,SAAS,EAAE,KALD;IAMV;IACAF,aAAa,EAAE,EAPL;IAQV;IACAG,MAAM,EAAE,KATE;IAUV;IACAC,QAAQ,EAAE,KAXA;IAYV;IACAC,QAAQ,EAAE,IAbA;IAcV;IACAC,MAAM,EAAE,IAfE;IAgBV;IACAC,MAAM,EAAE,KAjBE;IAkBV;IACAC,aAAa,EAAE,EAnBL;IAoBV;IACAC,OAAO,EAAE,KArBC;IAsBV;IACAC,0BAA0B,EAAE;EAvBlB,CAhID;EA0Jb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,SAAS,EAAE,gBAAgBC,IAAhB,EAAsBC,QAAtB,EAAgC;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,CAAhC,EAA6DC,OAA7D,EAAsE;IAC7E,IAAIH,KAAJ,EAAW;MACT,MAAMI,OAAO,CAACC,cAAR,CAAuB,oBAAoB,MAA3C,CAAN;IACD;EACF;EACH;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;AAhUa,CAAjB"}},"mtime":1659355550048},"{\"assumptions\":{},\"sourceRoot\":\"/Users/User/Documents/WDIO_RelatedTestcases/cucumber-wdio-js/step-definitions/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/User/Documents/WDIO_RelatedTestcases/cucumber-wdio-js\",\"filename\":\"/Users/User/Documents/WDIO_RelatedTestcases/cucumber-wdio-js/step-definitions/Loginstepdef.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/User/Documents/WDIO_RelatedTestcases/cucumber-wdio-js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.18.5:test":{"value":{"code":"const {\n  Given,\n  When,\n  Then\n} = require('@wdio/cucumber-framework');\n\nconst assert = require('assert');\n\nconst {\n  title\n} = require('process');\n\nGiven(/^I am on the login page$/, async () => {\n  await browser.url(\"https://www.saucedemo.com/\");\n  console.log(\"My URL is: \" + browser.getUrl());\n});\nWhen(/^I login with a default user$/, async () => {\n  await browser.$(\"#user-name\").setValue(\"standard_user\");\n  await browser.$(\"#password\").setValue(\"secret_sauce\");\n  await browser.$(\"#login-button\").click(); // const title = await browser.$(\".title\")\n  // assert.equal(title, PRODUCTS, [Message])\n});\nThen(/^I shall be on the Flight Finder page$/, async () => {\n  var strUrl = browser.getUrl();\n  console.log(\"URL is:\" + strUrl);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHaXZlbiIsIldoZW4iLCJUaGVuIiwicmVxdWlyZSIsImFzc2VydCIsInRpdGxlIiwiYnJvd3NlciIsInVybCIsImNvbnNvbGUiLCJsb2ciLCJnZXRVcmwiLCIkIiwic2V0VmFsdWUiLCJjbGljayIsInN0clVybCJdLCJzb3VyY2VSb290IjoiL1VzZXJzL1VzZXIvRG9jdW1lbnRzL1dESU9fUmVsYXRlZFRlc3RjYXNlcy9jdWN1bWJlci13ZGlvLWpzL3N0ZXAtZGVmaW5pdGlvbnMvIiwic291cmNlcyI6WyJMb2dpbnN0ZXBkZWYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBHaXZlbiwgV2hlbiwgVGhlbiB9ID0gcmVxdWlyZSgnQHdkaW8vY3VjdW1iZXItZnJhbWV3b3JrJyk7XG5jb25zdCBhc3NlcnQgPSByZXF1aXJlKCdhc3NlcnQnKTtcbmNvbnN0IHsgdGl0bGUgfSA9IHJlcXVpcmUoJ3Byb2Nlc3MnKTtcblxuR2l2ZW4oL15JIGFtIG9uIHRoZSBsb2dpbiBwYWdlJC8sIGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCBicm93c2VyLnVybChcImh0dHBzOi8vd3d3LnNhdWNlZGVtby5jb20vXCIpXG4gICAgY29uc29sZS5sb2coXCJNeSBVUkwgaXM6IFwiKyBicm93c2VyLmdldFVybCgpKTtcblxuXG59KTtcblxuV2hlbigvXkkgbG9naW4gd2l0aCBhIGRlZmF1bHQgdXNlciQvLCBhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgYnJvd3Nlci4kKFwiI3VzZXItbmFtZVwiKS5zZXRWYWx1ZShcInN0YW5kYXJkX3VzZXJcIik7XG4gICAgYXdhaXQgYnJvd3Nlci4kKFwiI3Bhc3N3b3JkXCIpLnNldFZhbHVlKFwic2VjcmV0X3NhdWNlXCIpO1xuICAgIGF3YWl0IGJyb3dzZXIuJChcIiNsb2dpbi1idXR0b25cIikuY2xpY2soKTtcbiAgICAvLyBjb25zdCB0aXRsZSA9IGF3YWl0IGJyb3dzZXIuJChcIi50aXRsZVwiKVxuICAgIC8vIGFzc2VydC5lcXVhbCh0aXRsZSwgUFJPRFVDVFMsIFtNZXNzYWdlXSlcbiAgIFxuXG59KTtcblxuVGhlbigvXkkgc2hhbGwgYmUgb24gdGhlIEZsaWdodCBGaW5kZXIgcGFnZSQvLCBhc3luYyAoKSA9PiB7XG4gICAgdmFyIHN0clVybCA9IGJyb3dzZXIuZ2V0VXJsKCk7XG5cbiAgICBjb25zb2xlLmxvZyhcIlVSTCBpczpcIiArIHN0clVybClcbn0pOyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtFQUFFQSxLQUFGO0VBQVNDLElBQVQ7RUFBZUM7QUFBZixJQUF3QkMsT0FBTyxDQUFDLDBCQUFELENBQXJDOztBQUNBLE1BQU1DLE1BQU0sR0FBR0QsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsTUFBTTtFQUFFRTtBQUFGLElBQVlGLE9BQU8sQ0FBQyxTQUFELENBQXpCOztBQUVBSCxLQUFLLENBQUMsMEJBQUQsRUFBNkIsWUFBWTtFQUMxQyxNQUFNTSxPQUFPLENBQUNDLEdBQVIsQ0FBWSw0QkFBWixDQUFOO0VBQ0FDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdCQUFlSCxPQUFPLENBQUNJLE1BQVIsRUFBM0I7QUFHSCxDQUxJLENBQUw7QUFPQVQsSUFBSSxDQUFDLCtCQUFELEVBQWtDLFlBQVk7RUFDOUMsTUFBTUssT0FBTyxDQUFDSyxDQUFSLENBQVUsWUFBVixFQUF3QkMsUUFBeEIsQ0FBaUMsZUFBakMsQ0FBTjtFQUNBLE1BQU1OLE9BQU8sQ0FBQ0ssQ0FBUixDQUFVLFdBQVYsRUFBdUJDLFFBQXZCLENBQWdDLGNBQWhDLENBQU47RUFDQSxNQUFNTixPQUFPLENBQUNLLENBQVIsQ0FBVSxlQUFWLEVBQTJCRSxLQUEzQixFQUFOLENBSDhDLENBSTlDO0VBQ0E7QUFHSCxDQVJHLENBQUo7QUFVQVgsSUFBSSxDQUFDLHdDQUFELEVBQTJDLFlBQVk7RUFDdkQsSUFBSVksTUFBTSxHQUFHUixPQUFPLENBQUNJLE1BQVIsRUFBYjtFQUVBRixPQUFPLENBQUNDLEdBQVIsQ0FBWSxZQUFZSyxNQUF4QjtBQUNILENBSkcsQ0FBSiJ9","map":{"version":3,"names":["Given","When","Then","require","assert","title","browser","url","console","log","getUrl","$","setValue","click","strUrl"],"sourceRoot":"/Users/User/Documents/WDIO_RelatedTestcases/cucumber-wdio-js/step-definitions/","sources":["Loginstepdef.js"],"sourcesContent":["const { Given, When, Then } = require('@wdio/cucumber-framework');\nconst assert = require('assert');\nconst { title } = require('process');\n\nGiven(/^I am on the login page$/, async () => {\n    await browser.url(\"https://www.saucedemo.com/\")\n    console.log(\"My URL is: \"+ browser.getUrl());\n\n\n});\n\nWhen(/^I login with a default user$/, async () => {\n    await browser.$(\"#user-name\").setValue(\"standard_user\");\n    await browser.$(\"#password\").setValue(\"secret_sauce\");\n    await browser.$(\"#login-button\").click();\n    // const title = await browser.$(\".title\")\n    // assert.equal(title, PRODUCTS, [Message])\n   \n\n});\n\nThen(/^I shall be on the Flight Finder page$/, async () => {\n    var strUrl = browser.getUrl();\n\n    console.log(\"URL is:\" + strUrl)\n});"],"mappings":"AAAA,MAAM;EAAEA,KAAF;EAASC,IAAT;EAAeC;AAAf,IAAwBC,OAAO,CAAC,0BAAD,CAArC;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAM;EAAEE;AAAF,IAAYF,OAAO,CAAC,SAAD,CAAzB;;AAEAH,KAAK,CAAC,0BAAD,EAA6B,YAAY;EAC1C,MAAMM,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAAN;EACAC,OAAO,CAACC,GAAR,CAAY,gBAAeH,OAAO,CAACI,MAAR,EAA3B;AAGH,CALI,CAAL;AAOAT,IAAI,CAAC,+BAAD,EAAkC,YAAY;EAC9C,MAAMK,OAAO,CAACK,CAAR,CAAU,YAAV,EAAwBC,QAAxB,CAAiC,eAAjC,CAAN;EACA,MAAMN,OAAO,CAACK,CAAR,CAAU,WAAV,EAAuBC,QAAvB,CAAgC,cAAhC,CAAN;EACA,MAAMN,OAAO,CAACK,CAAR,CAAU,eAAV,EAA2BE,KAA3B,EAAN,CAH8C,CAI9C;EACA;AAGH,CARG,CAAJ;AAUAX,IAAI,CAAC,wCAAD,EAA2C,YAAY;EACvD,IAAIY,MAAM,GAAGR,OAAO,CAACI,MAAR,EAAb;EAEAF,OAAO,CAACC,GAAR,CAAY,YAAYK,MAAxB;AACH,CAJG,CAAJ"}},"mtime":1659354960006}}